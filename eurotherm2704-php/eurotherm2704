#!/bin/sh
# Start/stop the eurotherm2704 readout daemon.
#
### BEGIN INIT INFO
# Provides:          eurotherm2704
# Required-Start:    $local_fs $remote_fs $network $syslog $named 
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start eurotherm2704 modbus readout script
# Description:       Eurotherm2704 are accessed by modbusTCP
### END INIT INFO



test -f /usr/sbin/eurotherm2704_start.sh || exit 0

PIDFILE=/var/run/eurotherm2704.pid
[ -r /etc/default/eurotherm2704 ] && . /etc/default/eurotherm2704

. /lib/lsb/init-functions


# We read /etc/environment, but warn about locale information in
# there because it should be in /etc/default/locale.
parse_environment () 
{
    for ENV_FILE in /etc/environment /etc/default/locale; do
        [ -r "$ENV_FILE" ] || continue
        [ -s "$ENV_FILE" ] || continue

         for var in LANG LANGUAGE LC_ALL LC_CTYPE; do
             value=`egrep "^${var}=" "$ENV_FILE" | tail -n1 | cut -d= -f2`
             [ -n "$value" ] && eval export $var=$value

             if [ -n "$value" ] && [ "$ENV_FILE" = /etc/environment ]; then
                 log_warning_msg "/etc/environment has been deprecated for locale information; use /etc/default/locale for $var=$value instead"
             fi
         done
     done

# Get the timezone set.
    if [ -z "$TZ" -a -e /etc/timezone ]; then
        TZ=`cat /etc/timezone` 
    fi
}

# Parse the system's environment
if [ "$READ_ENV" = "yes" ] ; then
    export LANG LC_ALL LC_CTYPE TZ LC_COLLATE
    parse_environment
    LC_COLLATE=C # Force collation sequence since ASCII is expected in regexps
fi


case "$1" in
start)	log_daemon_msg "Starting eurotherm2704" "eurotherm2704"
        start-stop-daemon --start --quiet --oknodo --make-pidfile --pidfile $PIDFILE  --name eurotherm2704 --background\
        --exec /usr/sbin/eurotherm2704_start.sh  
        log_end_msg $?
	;;
stop)	log_daemon_msg "Stopping eurotherm2704" "eurotherm2704"
	start-stop-daemon --stop --quiet --pidfile $PIDFILE
        log_end_msg $?
        ;;
restart) log_daemon_msg "Restarting eurotherm2704" "eurotherm2704"
	$0 stop
	$0 start
        ;;
status)
       log_action_begin_msg "Checking eurotherm2704 " 
       if pidofproc -p "$PIDFILE" >/dev/null; then
            log_action_end_msg 0 "running"
            exit 0
       else
           if [ -e "$PIDFILE" ]; then
                log_action_end_msg 1 "failed to start"
                exit 1
           else
                log_action_end_msg 0 "not running"
                exit 3
           fi
       fi
         ;;
*)	log_action_msg "Usage: /etc/init.d/eurotherm2704 {start|stop|status|restart}"
        exit 2
        ;;
esac
exit 0
